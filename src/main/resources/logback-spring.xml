<?xml version="1.0" encoding="UTF-8"?>

<!-- Reference Manual http://logback.qos.ch/manual/index.html -->
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->

<configuration scan="true" scanPeriod="60 seconds" debug="false">

  <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

  <!--定义日志文件路径，可以使“${}”来使用变量 -->
  <springProperty scope="context" name="log.path" source="logging.path" defaultValue="logs"/>
  <springProperty scope="context" name="service.name" source="spring.application.name"/>

  <!-- 彩色日志 -->
  <!-- 彩色日志依赖的渲染类 -->
  <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
  <conversionRule conversionWord="wex"
          converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
  <conversionRule conversionWord="wEx"
          converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
  <!-- 彩色日志格式 -->
  <property name="COLOR_LOG_PATTERN"
        value="${COLOR_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

  <!-- 控制台输出 -->
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <!-- encoder 可以指定字符集，对于中文输出有意义 -->
    <encoder charset="UTF-8" class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <!--控制台彩色日志-->
      <pattern>${COLOR_LOG_PATTERN}</pattern>
      <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
      <!--<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
    </encoder>
  </appender>

  <!-- 按照每天生成日志文件 -->
  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>TRACE</level>
    </filter>

    <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <!--日志文件输出的文件名 -->
      <FileNamePattern>./${log.path}/${service.name}.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
      <!--日志文件最大大小 -->
      <maxFileSize>500MB</maxFileSize>
      <!--日志文件保留天数 -->
      <MaxHistory>15</MaxHistory>
      <!--日志文件总大小尺寸 -->
      <totalSizeCap>20GB</totalSizeCap>
    </rollingPolicy>

    <encoder charset="UTF-8" class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%-25thread] %-5level [%-50logger{50}] - %msg%n</pattern>
    </encoder>
  </appender>

  <!-- 下面配置一些第三方包的日志过滤级别，用于避免刷屏 -->
  <logger name="org.apache.activemq.transport.AbstractInactivityMonitor" level="WARN"/>
  <logger name="org.apache.http.wire" level="WARN"/>
  <logger name="org.apache.tomcat" level="WARN"/>
  <logger name="org.springframework" level="WARN"/>

  <!-- 生产环境. -->
  <springProfile name="pro,prod">
    <logger name="com.ab.us" level="INFO"/>
  </springProfile>

  <!-- UAT、开发环境日志输出级别. -->
  <springProfile name="dat,uat,dev,test">
    <logger name="com.ab.us" level="DEBUG"/>
  </springProfile>

  <!-- 日志输出级别，输出到控制台和文件，可定义更多的 Appender -->
  <root level="INFO">
    <appender-ref ref="STDOUT"/>
    <appender-ref ref="FILE"/>
  </root>

</configuration>