<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aw.braceletserver.mapper.HealthMapper">
  <resultMap id="BaseResultMap" type="com.aw.braceletserver.model.Health">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="DEVICE_SERIAL_NUM" jdbcType="VARCHAR" property="deviceSerialNum" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="BLOOD_SUGAR" jdbcType="REAL" property="bloodSugar" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="DISASTOLIC" jdbcType="REAL" property="disastolic" />
    <result column="SHRINK" jdbcType="REAL" property="shrink" />
    <result column="HEART_BEAT" jdbcType="REAL" property="heartBeat" />
    <result column="STEPS" jdbcType="INTEGER" property="steps" />
    <result column="BLOOD_PRESSURE" jdbcType="REAL" property="bloodPressure" />
    <result column="BODY_TEMPERATURE" jdbcType="REAL" property="bodyTemperature" />
    <result column="DEEP_SLEEP_SEC" jdbcType="INTEGER" property="deepSleepSec" />
    <result column="LIGHT_SLEEP_SEC" jdbcType="INTEGER" property="lightSleepSec" />
    <result column="ROLL" jdbcType="INTEGER" property="roll" />
    <result column="WAKE" jdbcType="INTEGER" property="wake" />
    <result column="QUALITY" jdbcType="INTEGER" property="quality" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, DEVICE_SERIAL_NUM, USER_ID, BLOOD_SUGAR, CREATE_TIME, DISASTOLIC, SHRINK, HEART_BEAT, 
    STEPS, BLOOD_PRESSURE, BODY_TEMPERATURE, DEEP_SLEEP_SEC, LIGHT_SLEEP_SEC, ROLL, WAKE, 
    QUALITY
  </sql>
  <select id="selectByExample" parameterType="com.aw.braceletserver.model.HealthExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from health
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from health
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from health
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.aw.braceletserver.model.HealthExample">
    delete from health
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aw.braceletserver.model.Health">
    insert into health (ID, DEVICE_SERIAL_NUM, USER_ID, 
      BLOOD_SUGAR, CREATE_TIME, DISASTOLIC, 
      SHRINK, HEART_BEAT, STEPS, 
      BLOOD_PRESSURE, BODY_TEMPERATURE, DEEP_SLEEP_SEC, 
      LIGHT_SLEEP_SEC, ROLL, WAKE, 
      QUALITY)
    values (#{id,jdbcType=VARCHAR}, #{deviceSerialNum,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{bloodSugar,jdbcType=REAL}, #{createTime,jdbcType=TIMESTAMP}, #{disastolic,jdbcType=REAL}, 
      #{shrink,jdbcType=REAL}, #{heartBeat,jdbcType=REAL}, #{steps,jdbcType=INTEGER}, 
      #{bloodPressure,jdbcType=REAL}, #{bodyTemperature,jdbcType=REAL}, #{deepSleepSec,jdbcType=INTEGER}, 
      #{lightSleepSec,jdbcType=INTEGER}, #{roll,jdbcType=INTEGER}, #{wake,jdbcType=INTEGER}, 
      #{quality,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.aw.braceletserver.model.Health">
    insert into health
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="deviceSerialNum != null">
        DEVICE_SERIAL_NUM,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="bloodSugar != null">
        BLOOD_SUGAR,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="disastolic != null">
        DISASTOLIC,
      </if>
      <if test="shrink != null">
        SHRINK,
      </if>
      <if test="heartBeat != null">
        HEART_BEAT,
      </if>
      <if test="steps != null">
        STEPS,
      </if>
      <if test="bloodPressure != null">
        BLOOD_PRESSURE,
      </if>
      <if test="bodyTemperature != null">
        BODY_TEMPERATURE,
      </if>
      <if test="deepSleepSec != null">
        DEEP_SLEEP_SEC,
      </if>
      <if test="lightSleepSec != null">
        LIGHT_SLEEP_SEC,
      </if>
      <if test="roll != null">
        ROLL,
      </if>
      <if test="wake != null">
        WAKE,
      </if>
      <if test="quality != null">
        QUALITY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="deviceSerialNum != null">
        #{deviceSerialNum,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bloodSugar != null">
        #{bloodSugar,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="disastolic != null">
        #{disastolic,jdbcType=REAL},
      </if>
      <if test="shrink != null">
        #{shrink,jdbcType=REAL},
      </if>
      <if test="heartBeat != null">
        #{heartBeat,jdbcType=REAL},
      </if>
      <if test="steps != null">
        #{steps,jdbcType=INTEGER},
      </if>
      <if test="bloodPressure != null">
        #{bloodPressure,jdbcType=REAL},
      </if>
      <if test="bodyTemperature != null">
        #{bodyTemperature,jdbcType=REAL},
      </if>
      <if test="deepSleepSec != null">
        #{deepSleepSec,jdbcType=INTEGER},
      </if>
      <if test="lightSleepSec != null">
        #{lightSleepSec,jdbcType=INTEGER},
      </if>
      <if test="roll != null">
        #{roll,jdbcType=INTEGER},
      </if>
      <if test="wake != null">
        #{wake,jdbcType=INTEGER},
      </if>
      <if test="quality != null">
        #{quality,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aw.braceletserver.model.HealthExample" resultType="java.lang.Long">
    select count(*) from health
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update health
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceSerialNum != null">
        DEVICE_SERIAL_NUM = #{record.deviceSerialNum,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.bloodSugar != null">
        BLOOD_SUGAR = #{record.bloodSugar,jdbcType=REAL},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.disastolic != null">
        DISASTOLIC = #{record.disastolic,jdbcType=REAL},
      </if>
      <if test="record.shrink != null">
        SHRINK = #{record.shrink,jdbcType=REAL},
      </if>
      <if test="record.heartBeat != null">
        HEART_BEAT = #{record.heartBeat,jdbcType=REAL},
      </if>
      <if test="record.steps != null">
        STEPS = #{record.steps,jdbcType=INTEGER},
      </if>
      <if test="record.bloodPressure != null">
        BLOOD_PRESSURE = #{record.bloodPressure,jdbcType=REAL},
      </if>
      <if test="record.bodyTemperature != null">
        BODY_TEMPERATURE = #{record.bodyTemperature,jdbcType=REAL},
      </if>
      <if test="record.deepSleepSec != null">
        DEEP_SLEEP_SEC = #{record.deepSleepSec,jdbcType=INTEGER},
      </if>
      <if test="record.lightSleepSec != null">
        LIGHT_SLEEP_SEC = #{record.lightSleepSec,jdbcType=INTEGER},
      </if>
      <if test="record.roll != null">
        ROLL = #{record.roll,jdbcType=INTEGER},
      </if>
      <if test="record.wake != null">
        WAKE = #{record.wake,jdbcType=INTEGER},
      </if>
      <if test="record.quality != null">
        QUALITY = #{record.quality,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update health
    set ID = #{record.id,jdbcType=VARCHAR},
      DEVICE_SERIAL_NUM = #{record.deviceSerialNum,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      BLOOD_SUGAR = #{record.bloodSugar,jdbcType=REAL},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      DISASTOLIC = #{record.disastolic,jdbcType=REAL},
      SHRINK = #{record.shrink,jdbcType=REAL},
      HEART_BEAT = #{record.heartBeat,jdbcType=REAL},
      STEPS = #{record.steps,jdbcType=INTEGER},
      BLOOD_PRESSURE = #{record.bloodPressure,jdbcType=REAL},
      BODY_TEMPERATURE = #{record.bodyTemperature,jdbcType=REAL},
      DEEP_SLEEP_SEC = #{record.deepSleepSec,jdbcType=INTEGER},
      LIGHT_SLEEP_SEC = #{record.lightSleepSec,jdbcType=INTEGER},
      ROLL = #{record.roll,jdbcType=INTEGER},
      WAKE = #{record.wake,jdbcType=INTEGER},
      QUALITY = #{record.quality,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aw.braceletserver.model.Health">
    update health
    <set>
      <if test="deviceSerialNum != null">
        DEVICE_SERIAL_NUM = #{deviceSerialNum,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bloodSugar != null">
        BLOOD_SUGAR = #{bloodSugar,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="disastolic != null">
        DISASTOLIC = #{disastolic,jdbcType=REAL},
      </if>
      <if test="shrink != null">
        SHRINK = #{shrink,jdbcType=REAL},
      </if>
      <if test="heartBeat != null">
        HEART_BEAT = #{heartBeat,jdbcType=REAL},
      </if>
      <if test="steps != null">
        STEPS = #{steps,jdbcType=INTEGER},
      </if>
      <if test="bloodPressure != null">
        BLOOD_PRESSURE = #{bloodPressure,jdbcType=REAL},
      </if>
      <if test="bodyTemperature != null">
        BODY_TEMPERATURE = #{bodyTemperature,jdbcType=REAL},
      </if>
      <if test="deepSleepSec != null">
        DEEP_SLEEP_SEC = #{deepSleepSec,jdbcType=INTEGER},
      </if>
      <if test="lightSleepSec != null">
        LIGHT_SLEEP_SEC = #{lightSleepSec,jdbcType=INTEGER},
      </if>
      <if test="roll != null">
        ROLL = #{roll,jdbcType=INTEGER},
      </if>
      <if test="wake != null">
        WAKE = #{wake,jdbcType=INTEGER},
      </if>
      <if test="quality != null">
        QUALITY = #{quality,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aw.braceletserver.model.Health">
    update health
    set DEVICE_SERIAL_NUM = #{deviceSerialNum,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=INTEGER},
      BLOOD_SUGAR = #{bloodSugar,jdbcType=REAL},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      DISASTOLIC = #{disastolic,jdbcType=REAL},
      SHRINK = #{shrink,jdbcType=REAL},
      HEART_BEAT = #{heartBeat,jdbcType=REAL},
      STEPS = #{steps,jdbcType=INTEGER},
      BLOOD_PRESSURE = #{bloodPressure,jdbcType=REAL},
      BODY_TEMPERATURE = #{bodyTemperature,jdbcType=REAL},
      DEEP_SLEEP_SEC = #{deepSleepSec,jdbcType=INTEGER},
      LIGHT_SLEEP_SEC = #{lightSleepSec,jdbcType=INTEGER},
      ROLL = #{roll,jdbcType=INTEGER},
      WAKE = #{wake,jdbcType=INTEGER},
      QUALITY = #{quality,jdbcType=INTEGER}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>