<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aw.braceletserver.mapper.TxUserMapper">
  <resultMap id="BaseResultMap" type="com.aw.braceletserver.model.TxUser">
    <id column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="LOGIN_NAME" jdbcType="VARCHAR" property="loginName" />
    <result column="TOKEN" jdbcType="VARCHAR" property="token" />
    <result column="AVATAR" jdbcType="VARCHAR" property="avatar" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="CELLPHONE" jdbcType="VARCHAR" property="cellphone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="SEX" jdbcType="VARCHAR" property="sex" />
    <result column="DEVICE_ID" jdbcType="INTEGER" property="deviceId" />
    <result column="GROUP_ID" jdbcType="INTEGER" property="groupId" />
    <result column="ONLINE_STATUS" jdbcType="VARCHAR" property="onlineStatus" />
    <result column="LOGIN_TIME" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="LOGOUT_TIME" jdbcType="TIMESTAMP" property="logoutTime" />
    <result column="LOGIN_IP" jdbcType="VARCHAR" property="loginIp" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="HEIGHT" jdbcType="INTEGER" property="height" />
    <result column="WEIGHT" jdbcType="INTEGER" property="weight" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USER_ID, USER_NAME, PASSWORD, LOGIN_NAME, TOKEN, AVATAR, EMAIL, CELLPHONE, ADDRESS, 
    SEX, DEVICE_ID, GROUP_ID, ONLINE_STATUS, LOGIN_TIME, LOGOUT_TIME, LOGIN_IP, CREATE_TIME, 
    STATUS, HEIGHT, WEIGHT
  </sql>
  <select id="selectByExample" parameterType="com.aw.braceletserver.model.TxUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tx_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tx_user
    where USER_ID = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tx_user
    where USER_ID = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.aw.braceletserver.model.TxUserExample">
    delete from tx_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aw.braceletserver.model.TxUser">
    insert into tx_user (USER_ID, USER_NAME, PASSWORD, 
      LOGIN_NAME, TOKEN, AVATAR, 
      EMAIL, CELLPHONE, ADDRESS, 
      SEX, DEVICE_ID, GROUP_ID, 
      ONLINE_STATUS, LOGIN_TIME, LOGOUT_TIME, 
      LOGIN_IP, CREATE_TIME, STATUS, 
      HEIGHT, WEIGHT)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{loginName,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{cellphone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{deviceId,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, 
      #{onlineStatus,jdbcType=VARCHAR}, #{loginTime,jdbcType=TIMESTAMP}, #{logoutTime,jdbcType=TIMESTAMP}, 
      #{loginIp,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{height,jdbcType=INTEGER}, #{weight,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.aw.braceletserver.model.TxUser">
    insert into tx_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="loginName != null">
        LOGIN_NAME,
      </if>
      <if test="token != null">
        TOKEN,
      </if>
      <if test="avatar != null">
        AVATAR,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="cellphone != null">
        CELLPHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="sex != null">
        SEX,
      </if>
      <if test="deviceId != null">
        DEVICE_ID,
      </if>
      <if test="groupId != null">
        GROUP_ID,
      </if>
      <if test="onlineStatus != null">
        ONLINE_STATUS,
      </if>
      <if test="loginTime != null">
        LOGIN_TIME,
      </if>
      <if test="logoutTime != null">
        LOGOUT_TIME,
      </if>
      <if test="loginIp != null">
        LOGIN_IP,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="height != null">
        HEIGHT,
      </if>
      <if test="weight != null">
        WEIGHT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null">
        #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="onlineStatus != null">
        #{onlineStatus,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aw.braceletserver.model.TxUserExample" resultType="java.lang.Long">
    select count(*) from tx_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tx_user
    <set>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.loginName != null">
        LOGIN_NAME = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null">
        TOKEN = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        AVATAR = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.cellphone != null">
        CELLPHONE = #{record.cellphone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        SEX = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceId != null">
        DEVICE_ID = #{record.deviceId,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null">
        GROUP_ID = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.onlineStatus != null">
        ONLINE_STATUS = #{record.onlineStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null">
        LOGIN_TIME = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logoutTime != null">
        LOGOUT_TIME = #{record.logoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginIp != null">
        LOGIN_IP = #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.height != null">
        HEIGHT = #{record.height,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null">
        WEIGHT = #{record.weight,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tx_user
    set USER_ID = #{record.userId,jdbcType=INTEGER},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      LOGIN_NAME = #{record.loginName,jdbcType=VARCHAR},
      TOKEN = #{record.token,jdbcType=VARCHAR},
      AVATAR = #{record.avatar,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      CELLPHONE = #{record.cellphone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      SEX = #{record.sex,jdbcType=VARCHAR},
      DEVICE_ID = #{record.deviceId,jdbcType=INTEGER},
      GROUP_ID = #{record.groupId,jdbcType=INTEGER},
      ONLINE_STATUS = #{record.onlineStatus,jdbcType=VARCHAR},
      LOGIN_TIME = #{record.loginTime,jdbcType=TIMESTAMP},
      LOGOUT_TIME = #{record.logoutTime,jdbcType=TIMESTAMP},
      LOGIN_IP = #{record.loginIp,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      STATUS = #{record.status,jdbcType=VARCHAR},
      HEIGHT = #{record.height,jdbcType=INTEGER},
      WEIGHT = #{record.weight,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aw.braceletserver.model.TxUser">
    update tx_user
    <set>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        TOKEN = #{token,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        AVATAR = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null">
        CELLPHONE = #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        SEX = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        DEVICE_ID = #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        GROUP_ID = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="onlineStatus != null">
        ONLINE_STATUS = #{onlineStatus,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        LOGIN_TIME = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logoutTime != null">
        LOGOUT_TIME = #{logoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null">
        LOGIN_IP = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        HEIGHT = #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        WEIGHT = #{weight,jdbcType=INTEGER},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aw.braceletserver.model.TxUser">
    update tx_user
    set USER_NAME = #{userName,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      TOKEN = #{token,jdbcType=VARCHAR},
      AVATAR = #{avatar,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      CELLPHONE = #{cellphone,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=VARCHAR},
      DEVICE_ID = #{deviceId,jdbcType=INTEGER},
      GROUP_ID = #{groupId,jdbcType=INTEGER},
      ONLINE_STATUS = #{onlineStatus,jdbcType=VARCHAR},
      LOGIN_TIME = #{loginTime,jdbcType=TIMESTAMP},
      LOGOUT_TIME = #{logoutTime,jdbcType=TIMESTAMP},
      LOGIN_IP = #{loginIp,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=VARCHAR},
      HEIGHT = #{height,jdbcType=INTEGER},
      WEIGHT = #{weight,jdbcType=INTEGER}
    where USER_ID = #{userId,jdbcType=INTEGER}
  </update>
  <select id="selectMaxId" resultType="java.lang.Integer">
	select max(USER_ID)
	from tx_user for update
  </select>
  <select id="selectLogin" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tx_user where 1=1
    <if test="userId != null and userId !=''">
      and USER_ID=#{userId,jdbcType=VARCHAR}
    </if>
    <if test="loginName != null and loginName !=''">
      and LOGIN_NAME=#{loginName,jdbcType=VARCHAR}
    </if>
    <if test="pwd != null and pwd !=''">
      and PASSWORD=#{pwd,jdbcType=VARCHAR}
    </if>
    <if test="token != null and token !=''">
      and TOKEN=#{token,jdbcType=VARCHAR}
    </if>
  </select>

  <select id="selectDeviceDataByUserId" parameterType="java.lang.Integer" resultType="java.util.Map">
    select d.device_id deviceId, d.device_name deviceName, d.nick_name nickName,
		tu.user_id userId, tu.user_name userName,
		IFNULL(h2.BLOOD_SUGAR,0) bloodSugar, IFNULL(h2.DISASTOLIC,0) disastolic, IFNULL(h2.SHRINK,0) shrink,
		IFNULL(h2.HEART_BEAT,0) heartBeat, IFNULL(h2.BLOOD_PRESSURE,0) bloodPressure,
		IFNULL(h2.BODY_TEMPERATURE,0) bodyTemperature, IFNULL(h2.steps,0) steps,
		IFNULL(dp2.latitude,0) latitude, IFNULL(dp2.longitude,0) longitude, IFNULL(dp2.altitude,0) altitude,
		IFNULL(dp2.online_status,0) onlineStatus, IFNULL(dp2.device_utc_time,0) deviceUtcTime
	from device d
	left join user_group ug on d.device_id = ug.device_id
	left join tx_user tu on tu.user_id = ug.user_id
	left join
      (select * from health
        where id in (select max(h.id) from health h  group by h.DEVICE_SERIAL_NUM )
      ) h2 on d.SERIAL_NUMBER = h2.DEVICE_SERIAL_NUM
	left join (
        select * from device_position
        where id in (
          select max(dp.id) from device_position dp  group by dp.device_id )
        ) dp2 on d.device_id = dp2.device_id
	where tu.user_id = #{userId,jdbcType=INTEGER}
  </select>
</mapper>