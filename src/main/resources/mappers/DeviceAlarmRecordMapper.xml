<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aw.braceletserver.mapper.DeviceAlarmRecordMapper">
  <resultMap id="BaseResultMap" type="com.aw.braceletserver.model.DeviceAlarmRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="device_id" jdbcType="INTEGER" property="deviceId" />
    <result column="serial_number" jdbcType="VARCHAR" property="serialNumber" />
    <result column="alarm_name" jdbcType="VARCHAR" property="alarmName" />
    <result column="alarm_content" jdbcType="VARCHAR" property="alarmContent" />
    <result column="alarm_type" jdbcType="INTEGER" property="alarmType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="device_name" jdbcType="VARCHAR" property="deviceName" />
    <result column="model_name" jdbcType="VARCHAR" property="modelName" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="geo_fence_id" jdbcType="INTEGER" property="geoFenceId" />
    <result column="geo_name" jdbcType="VARCHAR" property="geoName" />
    <result column="fence_no" jdbcType="INTEGER" property="fenceNo" />
    <result column="olat" jdbcType="DECIMAL" property="olat" />
    <result column="olng" jdbcType="DECIMAL" property="olng" />
    <result column="altitude" jdbcType="REAL" property="altitude" />
    <result column="battery" jdbcType="INTEGER" property="battery" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, device_id, serial_number, alarm_name, alarm_content, alarm_type, create_time, 
    is_delete, latitude, longitude, address, device_name, model_name, nickname, avatar, 
    geo_fence_id, geo_name, fence_no, olat, olng, altitude, battery
  </sql>
  <select id="selectByExample" parameterType="com.aw.braceletserver.model.DeviceAlarmRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from device_alarm_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from device_alarm_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from device_alarm_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.aw.braceletserver.model.DeviceAlarmRecordExample">
    delete from device_alarm_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aw.braceletserver.model.DeviceAlarmRecord">
    insert into device_alarm_record (id, user_id, device_id, 
      serial_number, alarm_name, alarm_content, 
      alarm_type, create_time, is_delete, 
      latitude, longitude, address, 
      device_name, model_name, nickname, 
      avatar, geo_fence_id, geo_name, 
      fence_no, olat, olng, 
      altitude, battery)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{deviceId,jdbcType=INTEGER}, 
      #{serialNumber,jdbcType=VARCHAR}, #{alarmName,jdbcType=VARCHAR}, #{alarmContent,jdbcType=VARCHAR}, 
      #{alarmType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER}, 
      #{latitude,jdbcType=DECIMAL}, #{longitude,jdbcType=DECIMAL}, #{address,jdbcType=VARCHAR}, 
      #{deviceName,jdbcType=VARCHAR}, #{modelName,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{geoFenceId,jdbcType=INTEGER}, #{geoName,jdbcType=VARCHAR}, 
      #{fenceNo,jdbcType=INTEGER}, #{olat,jdbcType=DECIMAL}, #{olng,jdbcType=DECIMAL}, 
      #{altitude,jdbcType=REAL}, #{battery,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.aw.braceletserver.model.DeviceAlarmRecord">
    insert into device_alarm_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="serialNumber != null">
        serial_number,
      </if>
      <if test="alarmName != null">
        alarm_name,
      </if>
      <if test="alarmContent != null">
        alarm_content,
      </if>
      <if test="alarmType != null">
        alarm_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="deviceName != null">
        device_name,
      </if>
      <if test="modelName != null">
        model_name,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="geoFenceId != null">
        geo_fence_id,
      </if>
      <if test="geoName != null">
        geo_name,
      </if>
      <if test="fenceNo != null">
        fence_no,
      </if>
      <if test="olat != null">
        olat,
      </if>
      <if test="olng != null">
        olng,
      </if>
      <if test="altitude != null">
        altitude,
      </if>
      <if test="battery != null">
        battery,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="serialNumber != null">
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="alarmName != null">
        #{alarmName,jdbcType=VARCHAR},
      </if>
      <if test="alarmContent != null">
        #{alarmContent,jdbcType=VARCHAR},
      </if>
      <if test="alarmType != null">
        #{alarmType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="deviceName != null">
        #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="modelName != null">
        #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="geoFenceId != null">
        #{geoFenceId,jdbcType=INTEGER},
      </if>
      <if test="geoName != null">
        #{geoName,jdbcType=VARCHAR},
      </if>
      <if test="fenceNo != null">
        #{fenceNo,jdbcType=INTEGER},
      </if>
      <if test="olat != null">
        #{olat,jdbcType=DECIMAL},
      </if>
      <if test="olng != null">
        #{olng,jdbcType=DECIMAL},
      </if>
      <if test="altitude != null">
        #{altitude,jdbcType=REAL},
      </if>
      <if test="battery != null">
        #{battery,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aw.braceletserver.model.DeviceAlarmRecordExample" resultType="java.lang.Long">
    select count(*) from device_alarm_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update device_alarm_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.deviceId != null">
        device_id = #{record.deviceId,jdbcType=INTEGER},
      </if>
      <if test="record.serialNumber != null">
        serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.alarmName != null">
        alarm_name = #{record.alarmName,jdbcType=VARCHAR},
      </if>
      <if test="record.alarmContent != null">
        alarm_content = #{record.alarmContent,jdbcType=VARCHAR},
      </if>
      <if test="record.alarmType != null">
        alarm_type = #{record.alarmType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=DECIMAL},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=DECIMAL},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceName != null">
        device_name = #{record.deviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.modelName != null">
        model_name = #{record.modelName,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.geoFenceId != null">
        geo_fence_id = #{record.geoFenceId,jdbcType=INTEGER},
      </if>
      <if test="record.geoName != null">
        geo_name = #{record.geoName,jdbcType=VARCHAR},
      </if>
      <if test="record.fenceNo != null">
        fence_no = #{record.fenceNo,jdbcType=INTEGER},
      </if>
      <if test="record.olat != null">
        olat = #{record.olat,jdbcType=DECIMAL},
      </if>
      <if test="record.olng != null">
        olng = #{record.olng,jdbcType=DECIMAL},
      </if>
      <if test="record.altitude != null">
        altitude = #{record.altitude,jdbcType=REAL},
      </if>
      <if test="record.battery != null">
        battery = #{record.battery,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update device_alarm_record
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      device_id = #{record.deviceId,jdbcType=INTEGER},
      serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      alarm_name = #{record.alarmName,jdbcType=VARCHAR},
      alarm_content = #{record.alarmContent,jdbcType=VARCHAR},
      alarm_type = #{record.alarmType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      latitude = #{record.latitude,jdbcType=DECIMAL},
      longitude = #{record.longitude,jdbcType=DECIMAL},
      address = #{record.address,jdbcType=VARCHAR},
      device_name = #{record.deviceName,jdbcType=VARCHAR},
      model_name = #{record.modelName,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      geo_fence_id = #{record.geoFenceId,jdbcType=INTEGER},
      geo_name = #{record.geoName,jdbcType=VARCHAR},
      fence_no = #{record.fenceNo,jdbcType=INTEGER},
      olat = #{record.olat,jdbcType=DECIMAL},
      olng = #{record.olng,jdbcType=DECIMAL},
      altitude = #{record.altitude,jdbcType=REAL},
      battery = #{record.battery,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aw.braceletserver.model.DeviceAlarmRecord">
    update device_alarm_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="serialNumber != null">
        serial_number = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="alarmName != null">
        alarm_name = #{alarmName,jdbcType=VARCHAR},
      </if>
      <if test="alarmContent != null">
        alarm_content = #{alarmContent,jdbcType=VARCHAR},
      </if>
      <if test="alarmType != null">
        alarm_type = #{alarmType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="deviceName != null">
        device_name = #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="modelName != null">
        model_name = #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="geoFenceId != null">
        geo_fence_id = #{geoFenceId,jdbcType=INTEGER},
      </if>
      <if test="geoName != null">
        geo_name = #{geoName,jdbcType=VARCHAR},
      </if>
      <if test="fenceNo != null">
        fence_no = #{fenceNo,jdbcType=INTEGER},
      </if>
      <if test="olat != null">
        olat = #{olat,jdbcType=DECIMAL},
      </if>
      <if test="olng != null">
        olng = #{olng,jdbcType=DECIMAL},
      </if>
      <if test="altitude != null">
        altitude = #{altitude,jdbcType=REAL},
      </if>
      <if test="battery != null">
        battery = #{battery,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aw.braceletserver.model.DeviceAlarmRecord">
    update device_alarm_record
    set user_id = #{userId,jdbcType=INTEGER},
      device_id = #{deviceId,jdbcType=INTEGER},
      serial_number = #{serialNumber,jdbcType=VARCHAR},
      alarm_name = #{alarmName,jdbcType=VARCHAR},
      alarm_content = #{alarmContent,jdbcType=VARCHAR},
      alarm_type = #{alarmType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER},
      latitude = #{latitude,jdbcType=DECIMAL},
      longitude = #{longitude,jdbcType=DECIMAL},
      address = #{address,jdbcType=VARCHAR},
      device_name = #{deviceName,jdbcType=VARCHAR},
      model_name = #{modelName,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      geo_fence_id = #{geoFenceId,jdbcType=INTEGER},
      geo_name = #{geoName,jdbcType=VARCHAR},
      fence_no = #{fenceNo,jdbcType=INTEGER},
      olat = #{olat,jdbcType=DECIMAL},
      olng = #{olng,jdbcType=DECIMAL},
      altitude = #{altitude,jdbcType=REAL},
      battery = #{battery,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectAlarmDeviceDataByUserId" parameterType="java.util.Map" resultType="java.util.Map">
    select dar.user_id userId, tu.user_name userName, dar.device_id deviceId, dar.device_name deviceName, dar.nickname nickName,
		IFNULL(h2.BLOOD_SUGAR,0) bloodSugar, IFNULL(h2.DISASTOLIC,0) disastolic, IFNULL(h2.SHRINK,0) shrink,
		IFNULL(h2.HEART_BEAT,0) heartBeat, IFNULL(h2.BLOOD_PRESSURE,0) bloodPressure,
		IFNULL(h2.BODY_TEMPERATURE,0) bodyTemperature, IFNULL(h2.steps,0) steps,
		IFNULL(dar.latitude,0) latitude, IFNULL(dar.longitude,0) longitude, IFNULL(dar.altitude,0) altitude,
		IFNULL(dp2.online_status,0) onlineStatus, IFNULL(dar.create_time,0) deviceUtcTime
    from (select dar.* from device_alarm_record dar INNER JOIN device on dar.device_id = device.DEVICE_ID
			where dar.user_id = #{userId,jdbcType=INTEGER} and unix_timestamp(dar.create_time) > unix_timestamp(#{startTime,jdbcType=VARCHAR})
			) dar
    left join tx_user tu on dar.device_id = tu.device_id
    left join
      (select * from health
        where id in (select max(h.id) from health h  group by h.DEVICE_SERIAL_NUM )
      ) h2 on dar.SERIAL_NUMBER = h2.DEVICE_SERIAL_NUM
    left join (
        select * from device_position
        where id in (
          select max(dp.id) from device_position dp  group by dp.device_id )
        ) dp2 on dar.device_id = dp2.device_id
  </select>
</mapper>